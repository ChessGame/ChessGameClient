// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserMessage.proto

#ifndef PROTOBUF_UserMessage_2eproto__INCLUDED
#define PROTOBUF_UserMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_UserMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsReqUserLoginImpl();
void InitDefaultsReqUserLogin();
void InitDefaultsResUserLoginImpl();
void InitDefaultsResUserLogin();
inline void InitDefaults() {
  InitDefaultsReqUserLogin();
  InitDefaultsResUserLogin();
}
}  // namespace protobuf_UserMessage_2eproto
class ReqUserLogin;
class ReqUserLoginDefaultTypeInternal;
extern ReqUserLoginDefaultTypeInternal _ReqUserLogin_default_instance_;
class ResUserLogin;
class ResUserLoginDefaultTypeInternal;
extern ResUserLoginDefaultTypeInternal _ResUserLogin_default_instance_;

// ===================================================================

class ReqUserLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqUserLogin) */ {
 public:
  ReqUserLogin();
  virtual ~ReqUserLogin();

  ReqUserLogin(const ReqUserLogin& from);

  inline ReqUserLogin& operator=(const ReqUserLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqUserLogin(ReqUserLogin&& from) noexcept
    : ReqUserLogin() {
    *this = ::std::move(from);
  }

  inline ReqUserLogin& operator=(ReqUserLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUserLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqUserLogin* internal_default_instance() {
    return reinterpret_cast<const ReqUserLogin*>(
               &_ReqUserLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ReqUserLogin* other);
  friend void swap(ReqUserLogin& a, ReqUserLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqUserLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqUserLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqUserLogin& from);
  void MergeFrom(const ReqUserLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqUserLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string loginName = 1;
  void clear_loginname();
  static const int kLoginNameFieldNumber = 1;
  const ::std::string& loginname() const;
  void set_loginname(const ::std::string& value);
  #if LANG_CXX11
  void set_loginname(::std::string&& value);
  #endif
  void set_loginname(const char* value);
  void set_loginname(const char* value, size_t size);
  ::std::string* mutable_loginname();
  ::std::string* release_loginname();
  void set_allocated_loginname(::std::string* loginname);

  // @@protoc_insertion_point(class_scope:ReqUserLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr loginname_;
  mutable int _cached_size_;
  friend struct ::protobuf_UserMessage_2eproto::TableStruct;
  friend void ::protobuf_UserMessage_2eproto::InitDefaultsReqUserLoginImpl();
};
// -------------------------------------------------------------------

class ResUserLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResUserLogin) */ {
 public:
  ResUserLogin();
  virtual ~ResUserLogin();

  ResUserLogin(const ResUserLogin& from);

  inline ResUserLogin& operator=(const ResUserLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResUserLogin(ResUserLogin&& from) noexcept
    : ResUserLogin() {
    *this = ::std::move(from);
  }

  inline ResUserLogin& operator=(ResUserLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResUserLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResUserLogin* internal_default_instance() {
    return reinterpret_cast<const ResUserLogin*>(
               &_ResUserLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ResUserLogin* other);
  friend void swap(ResUserLogin& a, ResUserLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResUserLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  ResUserLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResUserLogin& from);
  void MergeFrom(const ResUserLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResUserLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string loginName = 1;
  void clear_loginname();
  static const int kLoginNameFieldNumber = 1;
  const ::std::string& loginname() const;
  void set_loginname(const ::std::string& value);
  #if LANG_CXX11
  void set_loginname(::std::string&& value);
  #endif
  void set_loginname(const char* value);
  void set_loginname(const char* value, size_t size);
  ::std::string* mutable_loginname();
  ::std::string* release_loginname();
  void set_allocated_loginname(::std::string* loginname);

  // int64 userId = 3;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ResUserLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr loginname_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_UserMessage_2eproto::TableStruct;
  friend void ::protobuf_UserMessage_2eproto::InitDefaultsResUserLoginImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqUserLogin

// string loginName = 1;
inline void ReqUserLogin::clear_loginname() {
  loginname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqUserLogin::loginname() const {
  // @@protoc_insertion_point(field_get:ReqUserLogin.loginName)
  return loginname_.GetNoArena();
}
inline void ReqUserLogin::set_loginname(const ::std::string& value) {
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqUserLogin.loginName)
}
#if LANG_CXX11
inline void ReqUserLogin::set_loginname(::std::string&& value) {
  
  loginname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ReqUserLogin.loginName)
}
#endif
inline void ReqUserLogin::set_loginname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqUserLogin.loginName)
}
inline void ReqUserLogin::set_loginname(const char* value, size_t size) {
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqUserLogin.loginName)
}
inline ::std::string* ReqUserLogin::mutable_loginname() {
  
  // @@protoc_insertion_point(field_mutable:ReqUserLogin.loginName)
  return loginname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqUserLogin::release_loginname() {
  // @@protoc_insertion_point(field_release:ReqUserLogin.loginName)
  
  return loginname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqUserLogin::set_allocated_loginname(::std::string* loginname) {
  if (loginname != NULL) {
    
  } else {
    
  }
  loginname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginname);
  // @@protoc_insertion_point(field_set_allocated:ReqUserLogin.loginName)
}

// -------------------------------------------------------------------

// ResUserLogin

// string loginName = 1;
inline void ResUserLogin::clear_loginname() {
  loginname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResUserLogin::loginname() const {
  // @@protoc_insertion_point(field_get:ResUserLogin.loginName)
  return loginname_.GetNoArena();
}
inline void ResUserLogin::set_loginname(const ::std::string& value) {
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResUserLogin.loginName)
}
#if LANG_CXX11
inline void ResUserLogin::set_loginname(::std::string&& value) {
  
  loginname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ResUserLogin.loginName)
}
#endif
inline void ResUserLogin::set_loginname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResUserLogin.loginName)
}
inline void ResUserLogin::set_loginname(const char* value, size_t size) {
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResUserLogin.loginName)
}
inline ::std::string* ResUserLogin::mutable_loginname() {
  
  // @@protoc_insertion_point(field_mutable:ResUserLogin.loginName)
  return loginname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResUserLogin::release_loginname() {
  // @@protoc_insertion_point(field_release:ResUserLogin.loginName)
  
  return loginname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResUserLogin::set_allocated_loginname(::std::string* loginname) {
  if (loginname != NULL) {
    
  } else {
    
  }
  loginname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginname);
  // @@protoc_insertion_point(field_set_allocated:ResUserLogin.loginName)
}

// int64 userId = 3;
inline void ResUserLogin::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResUserLogin::userid() const {
  // @@protoc_insertion_point(field_get:ResUserLogin.userId)
  return userid_;
}
inline void ResUserLogin::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ResUserLogin.userId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserMessage_2eproto__INCLUDED
